#!/usr/bin/env bash
# This script creates a custom 404 error page that contains the string
# 'Ceci n'est pas une page'.

#!/bin/bash

# Update the package list
sudo apt-get update -y

# Install Nginx
sudo apt-get install nginx -y

# Ensure Nginx service is running
sudo systemctl enable nginx
sudo systemctl start nginx

# Create a custom index.html file with "Hello World!" content
echo "Hello World!" | sudo tee /var/www/html/index.html

# Create a custom 404 error page
echo "Ceci n'est pas une page" | sudo tee /var/www/html/404.html

# Configure Nginx to:
# - Add a 301 redirect for /redirect_me
# - Serve a custom 404 page
NGINX_CONF="/etc/nginx/sites-available/default"

sudo tee $NGINX_CONF > /dev/null <<EOF
server {
    listen 80;
    server_name _;

    location / {
        root /var/www/html;
        index index.html;
    }

    location /redirect_me {
        return 301 https://www.example.com;  # Change to your desired URL
    }

    error_page 404 /404.html;
    location = /404.html {
        root /var/www/html;
        internal;
    }
}
EOF

# Ensure the firewall allows HTTP traffic
sudo ufw allow 80/tcp
sudo ufw reload

# Restart Nginx to apply changes
nginx -s stop
nginx

# Check if Nginx is running and listening on port 80
if curl -s localhost | grep -q "Hello World!"; then
    echo "Nginx is serving the expected content."
else
    echo "Nginx is not serving the expected content."
fi

# Check if /redirect_me returns a 301 response
REDIRECT_STATUS=$(curl -o /dev/null -s -w "%{http_code}" -L -I http://localhost/redirect_me)
if [ "$REDIRECT_STATUS" == "301" ]; then
    echo "/redirect_me is correctly set up as a 301 redirect."
else
    echo "Error: /redirect_me is not redirecting properly."
fi

# Check if the custom 404 page works correctly
NOT_FOUND_STATUS=$(curl -o /dev/null -s -w "%{http_code}" -I http://localhost/nonexistentpage)
if [ "$NOT_FOUND_STATUS" == "404" ]; then
    echo "Custom 404 page is working correctly."
else
    echo "Error: Custom 404 page is not returning a 404 status."
fi
